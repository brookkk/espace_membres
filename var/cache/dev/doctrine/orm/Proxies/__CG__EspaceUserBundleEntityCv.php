<?php

namespace Proxies\__CG__\Espace\UserBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Cv extends \Espace\UserBundle\Entity\Cv implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Espace\\UserBundle\\Entity\\Cv' . "\0" . 'id', '' . "\0" . 'Espace\\UserBundle\\Entity\\Cv' . "\0" . 'experiences', '' . "\0" . 'Espace\\UserBundle\\Entity\\Cv' . "\0" . 'langues', '' . "\0" . 'Espace\\UserBundle\\Entity\\Cv' . "\0" . 'mobilite', '' . "\0" . 'Espace\\UserBundle\\Entity\\Cv' . "\0" . 'facebookLink', '' . "\0" . 'Espace\\UserBundle\\Entity\\Cv' . "\0" . 'linkedinLink', '' . "\0" . 'Espace\\UserBundle\\Entity\\Cv' . "\0" . 'viadeoLink', '' . "\0" . 'Espace\\UserBundle\\Entity\\Cv' . "\0" . 'experience', '' . "\0" . 'Espace\\UserBundle\\Entity\\Cv' . "\0" . 'profilTitre', '' . "\0" . 'Espace\\UserBundle\\Entity\\Cv' . "\0" . 'typeContratRecherche', '' . "\0" . 'Espace\\UserBundle\\Entity\\Cv' . "\0" . 'cvFile', '' . "\0" . 'Espace\\UserBundle\\Entity\\Cv' . "\0" . 'domaineCompetence'];
        }

        return ['__isInitialized__', '' . "\0" . 'Espace\\UserBundle\\Entity\\Cv' . "\0" . 'id', '' . "\0" . 'Espace\\UserBundle\\Entity\\Cv' . "\0" . 'experiences', '' . "\0" . 'Espace\\UserBundle\\Entity\\Cv' . "\0" . 'langues', '' . "\0" . 'Espace\\UserBundle\\Entity\\Cv' . "\0" . 'mobilite', '' . "\0" . 'Espace\\UserBundle\\Entity\\Cv' . "\0" . 'facebookLink', '' . "\0" . 'Espace\\UserBundle\\Entity\\Cv' . "\0" . 'linkedinLink', '' . "\0" . 'Espace\\UserBundle\\Entity\\Cv' . "\0" . 'viadeoLink', '' . "\0" . 'Espace\\UserBundle\\Entity\\Cv' . "\0" . 'experience', '' . "\0" . 'Espace\\UserBundle\\Entity\\Cv' . "\0" . 'profilTitre', '' . "\0" . 'Espace\\UserBundle\\Entity\\Cv' . "\0" . 'typeContratRecherche', '' . "\0" . 'Espace\\UserBundle\\Entity\\Cv' . "\0" . 'cvFile', '' . "\0" . 'Espace\\UserBundle\\Entity\\Cv' . "\0" . 'domaineCompetence'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Cv $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getMobilite()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMobilite', []);

        return parent::getMobilite();
    }

    /**
     * {@inheritDoc}
     */
    public function setMobilite($mobilite)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMobilite', [$mobilite]);

        return parent::setMobilite($mobilite);
    }

    /**
     * {@inheritDoc}
     */
    public function getProfilTitre()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProfilTitre', []);

        return parent::getProfilTitre();
    }

    /**
     * {@inheritDoc}
     */
    public function setProfilTitre($profilTitre)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProfilTitre', [$profilTitre]);

        return parent::setProfilTitre($profilTitre);
    }

    /**
     * {@inheritDoc}
     */
    public function setTypeContratRecherche($typeContratRecherche)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTypeContratRecherche', [$typeContratRecherche]);

        return parent::setTypeContratRecherche($typeContratRecherche);
    }

    /**
     * {@inheritDoc}
     */
    public function getTypeContratRecherche()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTypeContratRecherche', []);

        return parent::getTypeContratRecherche();
    }

    /**
     * {@inheritDoc}
     */
    public function getExperience()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExperience', []);

        return parent::getExperience();
    }

    /**
     * {@inheritDoc}
     */
    public function setExperience($experience)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExperience', [$experience]);

        return parent::setExperience($experience);
    }

    /**
     * {@inheritDoc}
     */
    public function getFacebookLink()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFacebookLink', []);

        return parent::getFacebookLink();
    }

    /**
     * {@inheritDoc}
     */
    public function setFacebookLink($facebookLink)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFacebookLink', [$facebookLink]);

        return parent::setFacebookLink($facebookLink);
    }

    /**
     * {@inheritDoc}
     */
    public function getLinkedinLink()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLinkedinLink', []);

        return parent::getLinkedinLink();
    }

    /**
     * {@inheritDoc}
     */
    public function setLinkedinLink($linkedinLink)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLinkedinLink', [$linkedinLink]);

        return parent::setLinkedinLink($linkedinLink);
    }

    /**
     * {@inheritDoc}
     */
    public function getViadeoLink()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getViadeoLink', []);

        return parent::getViadeoLink();
    }

    /**
     * {@inheritDoc}
     */
    public function setViadeoLink($viadeoLink)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setViadeoLink', [$viadeoLink]);

        return parent::setViadeoLink($viadeoLink);
    }

    /**
     * {@inheritDoc}
     */
    public function getCvFile()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCvFile', []);

        return parent::getCvFile();
    }

    /**
     * {@inheritDoc}
     */
    public function setCvFile($cvFile)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCvFile', [$cvFile]);

        return parent::setCvFile($cvFile);
    }

    /**
     * {@inheritDoc}
     */
    public function setDomaineCompetence($domaineCompetence)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDomaineCompetence', [$domaineCompetence]);

        return parent::setDomaineCompetence($domaineCompetence);
    }

    /**
     * {@inheritDoc}
     */
    public function getDomaineCompetence()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDomaineCompetence', []);

        return parent::getDomaineCompetence();
    }

    /**
     * {@inheritDoc}
     */
    public function getExperiences()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExperiences', []);

        return parent::getExperiences();
    }

    /**
     * {@inheritDoc}
     */
    public function addExperience(\Espace\PlatformBundle\Entity\Experience $experience)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addExperience', [$experience]);

        return parent::addExperience($experience);
    }

    /**
     * {@inheritDoc}
     */
    public function removeExperience(\Espace\PlatformBundle\Entity\Experience $experience)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeExperience', [$experience]);

        return parent::removeExperience($experience);
    }

    /**
     * {@inheritDoc}
     */
    public function getLangues()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLangues', []);

        return parent::getLangues();
    }

    /**
     * {@inheritDoc}
     */
    public function addLangue(\Espace\PlatformBundle\Entity\Langue $langue)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addLangue', [$langue]);

        return parent::addLangue($langue);
    }

    /**
     * {@inheritDoc}
     */
    public function removeLangue(\Espace\PlatformBundle\Entity\Langue $langue)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeLangue', [$langue]);

        return parent::removeLangue($langue);
    }

}
